{{!-- TODO: major / minor scale??, invoke -> null  --}}
{{!--  if data is in right format, then default scales just get set up automatically --}}
{{!-- add legend  --}}
{{!-- legend test: should be able to turn off / on with a property --}}

{{!-- TODO: setup domain for groupScale with map helper --}}
{{!-- write tests for grouped bar chart  --}}
{{!-- add line series example --}}

{{!-- check that update keeps things in order  --}}
{{!-- check that legend is also in order --}}

{{!--  --}}

{{#if d3el}}
  {{#with (hash
    inputAccessor=(or input-accessor (d3-get 'ts'))
    valueAccessor=(or output-accessor (d3-get 'value'))
    outputAccessor=(d3-get 'Wh_sum')
    groupAccessor=(d3-get 'name')
    xScale=(or x-scale (band-scale
      (append 0 width)
      (append 0 width)
    ))
    groupScale=(band-scale
      (map-by 'name' (sort-by 'name' (get (get data '0') 'Wh_sum')))
      (append 0 (compute x-scale.bandwidth))
      padding=0.05
    )
    yScale=(or y-scale (linear-scale
      (append 0 height)
      (append height 0)
    ))
    groupDomain=(map-by 'name' (sort-by 'name' (get (get data '0') 'Wh_sum')))
    colorScale=(cat-color-scale '20c'
      (map-by 'name' (sort-by 'name' (get (get data '0') 'Wh_sum')))
    )
    tickFormat=(or tick-format '%Y-%m-%d')

    transition=(or transition (ember-sparkles/transition duration=400 data=data))
    ) as |options|}}

      {{ember-d3-helpers/invoke (pipe
        (d3-append 'g')
        (d3-attr 'class' 'x axis')
        (d3-attr 'transform' (i 'translate(0,${h})' h=height))
        ) d3el
      }}

      {{#with (ember-sparkles/axis options.xScale position='bottom' tickFormat='%Y-%m-%d') as |axis|}}
        {{ember-d3-helpers/invoke (pipe
          (d3-select-all '.x.axis')
          (if with-transition (d3-transition options.transition) (d3-noop))
          (d3-call axis)
          ) d3el
        }}
      {{/with}}
      

      {{ember-d3-helpers/invoke (pipe
        (d3-append 'g')
        (d3-attr 'class' 'y axis')
        ) d3el
      }}

      {{#with (ember-sparkles/axis options.yScale position='left' ticks=ticks) as |axis|}}
        {{ember-d3-helpers/invoke (pipe
          (d3-select-all '.y.axis')
          (if with-transition (d3-transition options.transition) (d3-noop))
          (d3-call axis)
          ) d3el
        }}
      {{/with}}

      {{ember-d3-helpers/invoke
        (d3-join '.rect-group' data
          enter=(pipe
            (d3-append 'g')
            (d3-classed 'rect-group' true)
            (d3-attr 'transform' (pipe options.inputAccessor options.xScale (ember-sparkles/translate-x)))

            (d3-join 'rect' options.outputAccessor
              enter=(pipe
                (d3-append 'rect')
                (d3-attr 'width' 0)
                (d3-attr 'y' height)
                (d3-attr 'height' 0)
                (d3-style 'fill' 'red')
                (d3-style 'opacity' 0)
                (d3-attr 'x' (pipe (d3-get 'name') options.groupScale))
                (if with-transition (d3-transition options.transition) (d3-noop))
                (d3-style 'opacity' 1)
                (d3-attr 'y' (pipe options.valueAccessor options.yScale))
                (d3-attr 'width' options.groupScale.bandwidth)
                (d3-attr 'height' (pipe options.valueAccessor options.yScale (bar-height height)))
                (d3-style 'fill' (pipe (d3-get 'name') options.colorScale))
              )
            )
          )

          update=(pipe
            (d3-join 'rect' options.outputAccessor
              enter=(pipe
                (d3-append 'rect')
                (d3-attr 'width' 0)
                (d3-attr 'y' height)
                (d3-attr 'height' 0)
                (d3-style 'fill' 'red')
                (d3-style 'opacity' 0)
                (d3-attr 'x' (pipe (d3-get 'name') options.groupScale))
                (if with-transition (d3-transition options.transition) (d3-noop))
                (d3-style 'opacity' 1)
                (d3-attr 'y' (pipe options.valueAccessor options.yScale))
                (d3-attr 'width' options.groupScale.bandwidth)
                (d3-attr 'height' (pipe options.valueAccessor options.yScale (bar-height height)))
                (d3-style 'fill' (pipe (d3-get 'name') options.colorScale))
              )
              update=(pipe
                (if with-transition (d3-transition options.transition) (d3-noop))
                (d3-style 'opacity' 1)
                (d3-attr 'x' (pipe (d3-get 'name') options.groupScale))
                (d3-attr 'y' (pipe options.valueAccessor options.yScale))
                (d3-attr 'width' options.groupScale.bandwidth)
                (d3-attr 'height' (pipe options.valueAccessor options.yScale (bar-height height)))
                (d3-style 'fill' (pipe (d3-get 'name') options.colorScale))

              )
              exit=(pipe
                (d3-remove)
              )
            )
            (if with-transition (d3-transition options.transition) (d3-noop))
            (d3-attr 'transform' (pipe options.inputAccessor options.xScale (ember-sparkles/translate-x)))
          )

          exit=(pipe
            (d3-join 'rect' options.outputAccessor
              update=(pipe
                (if with-transition (d3-transition options.transition) (d3-noop))
                (d3-attr 'y' height)
                (d3-attr 'height' 0)
                (d3-style 'fill' 'green')
                (d3-style 'opacity' 0)
                (d3-remove)
              )
            )
            (if with-transition (d3-transition options.transition) (d3-noop))
            (d3-remove)
          )
        )
      d3el }}
      
      {{#with (compute 
        (pipe 
          (d3-append 'g')
          (d3-attr 'class' 'legend')
          (d3-attr 'transform' (i 'translate(${w},18)' w=(sub width 18)))
        ) 
      
      d3el) as |legend|}}
      
        {{ember-d3-helpers/invoke 
          (d3-join 'rect' options.groupDomain
            enter=(pipe
              (d3-append 'rect')
              (d3-attr 'transform' transformLegend)
              (d3-attr 'width' 14)
              (d3-attr 'height' 14)
              (d3-style 'fill' options.colorScale)
              (d3-attr 'opacity' 0)
              (if with-transition (d3-transition options.transition) (d3-noop))
              (d3-attr 'opacity' 1)
            )
            
            update=(pipe
              (d3-style 'fill' options.colorScale)
            )
            
            exit=(pipe
              (d3-remove)
            )
          ) 
        legend }}
        
        {{ember-d3-helpers/invoke 
          (d3-join 'text' options.groupDomain
            enter=(pipe
              (d3-append 'text')
              (d3-attr 'opacity' 0)
              (d3-attr 'dx' '-3.8em')
              (d3-attr 'dy' '1em')
              (d3-style 'font-size' '10px')
              (if with-transition (d3-transition options.transition) (d3-noop))
              (d3-text (d3-get))
              (d3-attr 'transform' transformLegend)
              (d3-attr 'opacity' 1)
            )
            
            update=(pipe
              (d3-text (d3-get))
            )
            
            exit=(pipe
              (if with-transition (d3-transition options.transition) (d3-noop))
              (d3-attr 'opacity' 0)
              (d3-remove)
            )
          ) 
        legend }}
        
      {{/with}}
      
      {{!--{{log (invoke options.colorScale (map-by 'name' (sort-by 'name' (get (get data '0') 'Wh_sum'))))}}--}}

      {{!--{{ember-d3-helpers/invoke
        (d3-join '.legend' (map-by 'name' (sort-by 'name' (get (get data '0') 'Wh_sum')))
          enter=(pipe
            (d3-append 'g')
            (d3-attr 'class' 'legend')
            (d3-attr 'transform' transformLegend)
            (d3-call (pipe
              (d3-append 'rect')
              (d3-attr 'x' (sub width 18))
              (d3-attr 'width' 18)
              (d3-attr 'height' 18)
              (d3-style 'fill' options.colorScale)
            ))
            (d3-append 'text')
            (d3-attr 'x' (sub width 24))
            (d3-attr 'y' 9)
            (d3-attr 'dy' '.35em')
            (d3-style 'text-anchor' 'end')
            (d3-text (d3-get))
          )

          update=(pipe
            
          )

          exit=(pipe
            (d3-remove)
          )
        )

      d3el }}--}}

  {{/with}}

{{/if}}
